--SELECT @@SERVERNAME

--DROP TABLES IF THEY ALREADY EXIST, NEW TABLES BUT BEST PRACTICE IF NOT IN PROD
IF OBJECT_ID ('PRODUCTS','U') IS NOT NULL DROP TABLE PRODUCTS;
IF OBJECT_ID ('CUSTOMERS','U') IS NOT NULL DROP TABLE CUSTOMERS;
IF OBJECT_ID ('GEOLOCATION','U') IS NOT NULL DROP TABLE GEOLOCATION;
IF OBJECT_ID ('ORDER_ITEMS','U') IS NOT NULL DROP TABLE ORDER_ITEMS;
IF OBJECT_ID ('ORDERS','U') IS NOT NULL DROP TABLE ORDERS;
IF OBJECT_ID ('PAYMENTS','U') IS NOT NULL DROP TABLE PAYMENTS;
IF OBJECT_ID ('SELLERS','U') IS NOT NULL DROP TABLE SELLERS;

GO

--CREATE PRODUCTS TABLE AND INSERT RECORDS FROM CSV FILE
CREATE TABLE PRODUCTS (
	PRODUCT_ID 	VARCHAR(150) PRIMARY KEY,
	PRODUCT_CATEGORY VARCHAR(100),
	PRODUCT_NAME_LENGTH INTEGER,
	PRODUCT_DESCRIPTION_LENGTH INTEGER,
	PRODUCT_PHOTOS_QTY INTEGER,
	PRODUCT_WEIGHT_G INTEGER,
	PRODUCT_LENGTH_CM INTEGER,
	PRODUCT_HEIGHT_CM INTEGER,
	PRODUCT_WIDTH_CM INTEGER
);

BULK INSERT PRODUCTS 
FROM 'C:\USERS\AMREE\DOWNLOADS\ARCHIVE (2)\PRODUCTS.CSV'
WITH (
	FORMAT = 'CSV',
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	ROWTERMINATOR ='\N'
	);

--CREATE CUSTOMERS TABLE AND INSERT RECORDS FROM CSV FILE
CREATE TABLE CUSTOMERS (
	CUSTOMER_ID VARCHAR(150) NOT NULL,
	CUSTOMER_UNIQUE_ID VARCHAR(150) NOT NULL,
	CUSTOMER_ZIP_CODE_PREFIX INTEGER,
	CUSTOMER_CITY VARCHAR(100),
	CUSTOMER_STATE VARCHAR(100),
	CONSTRAINT CUSTOMER PRIMARY KEY (CUSTOMER_ID,CUSTOMER_UNIQUE_ID)
);

BULK INSERT CUSTOMERS
FROM 'C:\USERS\AMREE\DOWNLOADS\ARCHIVE (2)\CUSTOMERS.CSV'
WITH (
	FORMAT = 'CSV',
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	ROWTERMINATOR = '0X0A'
	);

--CREATE GEOLOCATION TABLES AND INSERT RECORDS FROM GEOLOCATION CSV FILE
CREATE TABLE GEOLOCATION (
	GEOLOCATION_ZIP_CODE_PREFIX INTEGER,
	GEOLOCATION_LAT FLOAT,
	GEOLOCATION_LNG FLOAT,
	GEOLOCATION_CITY TEXT,
	GEOLOCATION_STATE TEXT
);

BULK INSERT GEOLOCATION
FROM 'C:\USERS\AMREE\DOWNLOADS\ARCHIVE (2)\GEOLOCATION.CSV'
WITH (
	FORMAT = 'CSV',
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	ROWTERMINATOR = '0X0A'
	);

--CREATE ORDER_ITEMS TABLE AND INSERT RECORDS FROM CSV FILE
CREATE TABLE ORDER_ITEMS (
	ORDER_ID VARCHAR(150) NOT NULL,
	ORDER_ITEM_ID INTEGER NOT NULL,
	PRODUCT_ID VARCHAR(150) NOT NULL,
	SELLER_ID VARCHAR(150) NOT NULL,
	SHIPPING_LIMIT_DATE DATETIME,
	PRICE FLOAT,
	FREIGHT_VALUE FLOAT,
	CONSTRAINT ITEMS PRIMARY KEY (ORDER_ID,ORDER_ITEM_ID,PRODUCT_ID,SELLER_ID)
);

BULK INSERT ORDER_ITEMS
FROM 'C:\USERS\AMREE\DOWNLOADS\ARCHIVE (2)\ORDER_ITEMS.CSV'
WITH (
	FORMAT = 'CSV',
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	ROWTERMINATOR = '0X0A'
	);

--CREATE ORDERS TABLE AND INSERT RECORDS FROM CSV FILE
CREATE TABLE ORDERS (
	ORDER_ID VARCHAR(150) NOT NULL,
	CUSTOMER_ID VARCHAR(150) NOT NULL,
	ORDER_STATUS VARCHAR(100),
	ORDER_PURCHASE_TIMESTAMP DATETIME,
	ORDER_APPROVED_AT DATETIME,
	ORDER_DELIVERED_CARRIER_DATE DATETIME,
	ORDER_DELIVERED_CUSTOMER_DATE DATETIME,
	ORDER_ESTIMATED_DELIVERY_DATE DATETIME,
	CONSTRAINT ORDERS_UNIQUE PRIMARY KEY (ORDER_ID,CUSTOMER_ID)
);

BULK INSERT ORDERS 
FROM 'C:\USERS\AMREE\DOWNLOADS\ARCHIVE (2)\ORDERS.CSV'
WITH (
	FORMAT = 'CSV',
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	ROWTERMINATOR = '0X0D0A'
	);


--CREATE PAYMENTS TABLE AND INSERT RECORDS FROM CSV FILE
CREATE TABLE PAYMENTS (
	ORDER_ID VARCHAR(150),
	PAYMENT_SEQUENTIAL INTEGER,
	PAYMENT_TYPE VARCHAR(150),
	PAYMENT_INSTALLMENTS INTEGER,
	PAYMENT_VALUE FLOAT,
	CONSTRAINT PAYMENTS_UNIQUE PRIMARY KEY (ORDER_ID,PAYMENT_SEQUENTIAL,PAYMENT_TYPE)
);

BULK INSERT PAYMENTS
FROM 'C:\USERS\AMREE\DOWNLOADS\ARCHIVE (2)\PAYMENTS.CSV'
WITH (
	FORMAT = 'CSV',
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	ROWTERMINATOR = '0X0A'
	);

--CREATE SELLERS TABLE AND INSERT RECORDS FROM CSV FILE
CREATE TABLE SELLERS (
	SELLER_ID VARCHAR(150) PRIMARY KEY,
	SELLER_ZIP_CODE_PREFIX INTEGER,
	SELLER_CITY VARCHAR(150),
	SELLER_STATE TEXT
);

BULK INSERT SELLERS
FROM 'C:\USERS\AMREE\DOWNLOADS\ARCHIVE (2)\SELLERS.CSV'
WITH (
	FORMAT = 'CSV',
	FIRSTROW = 2,
	FIELDTERMINATOR = ',',
	ROWTERMINATOR = '0X0A'
	);


--CHECK ALL COUNTS AGAINST CSV FILE COUNTS
SELECT COUNT(1) FROM PRODUCTS; --32,951
SELECT COUNT(1) FROM CUSTOMERS; --99,441
SELECT COUNT(1) FROM SELLERS; --3,095
SELECT COUNT(1) FROM GEOLOCATION; --1,000,163
SELECT COUNT(1) FROM ORDER_ITEMS; -- 112,650
SELECT COUNT(1) FROM ORDERS; --99,441
SELECT COUNT(1) FROM PAYMENTS; --103,886

